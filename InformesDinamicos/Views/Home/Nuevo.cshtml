@{
    ViewData["Title"] = "Sistema CRUD Acad√©mico";
}

<div class="container-fluid">
    <div class="text-center mb-4">
        <h1 class="display-4">üìä Sistema de BD</h1>
        <p class="lead">Gesti√≥n normalizada con MongoDB</p>
    </div>

    <!-- Filtro por Base de Datos -->
    <div class="row mb-3">
        <div class="col-12 text-center">
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-outline-primary active bd-filter" data-bd="todas">üìä Todas</button>
                <button type="button" class="btn btn-outline-success bd-filter" data-bd="General">üèõÔ∏è General</button>
                <button type="button" class="btn btn-outline-info bd-filter" data-bd="Academico">üìö Acad√©mico</button>
                <button type="button" class="btn btn-outline-warning bd-filter" data-bd="Comunidad">üë• Comunidad</button>
            </div>
            <div class="mt-2">
                <span id="bd-info" class="badge bg-secondary">Mostrando todas las colecciones</span>
            </div>
        </div>
    </div>

    <!-- Controles Principales -->
    <div class="row mb-4">
        <div class="col-12 text-center">
            <button class="btn btn-success me-2" onclick="crearDatos()">
                <i class="fas fa-plus"></i> Crear Datos de Prueba
            </button>
            <button class="btn btn-danger" onclick="limpiarDatos()">
                <i class="fas fa-trash"></i> Limpiar Datos
            </button>
        </div>
    </div>

    <!-- Tabs CRUD -->
    <ul class="nav nav-tabs" id="crudTabs">
        <li class="nav-item">
            <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#instituciones">
                üèõÔ∏è Instituciones
            </button>
        </li>
        <li class="nav-item">
            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#programas">
                üìö Programas
            </button>
        </li>
        <li class="nav-item">
            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#asignaturas">
                üìñ Asignaturas
            </button>
        </li>
        <li class="nav-item">
            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#personas">
                üë• Personas
            </button>
        </li>
    </ul>

    <div class="tab-content">
        <!-- INSTITUCIONES -->
        <div class="tab-pane fade show active" id="instituciones">
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-plus"></i> Nueva Instituci√≥n</h5>
                        </div>
                        <div class="card-body">
                            <form id="form-institucion">
                                <div class="mb-3">
                                    <label class="form-label">Nombre</label>
                                    <input type="text" class="form-control" name="nombre" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">C√≥digo</label>
                                    <input type="text" class="form-control" name="codigo" required>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-save"></i> Guardar
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <h5><i class="fas fa-list"></i> Lista de Instituciones</h5>
                            <button class="btn btn-sm btn-outline-primary" onclick="cargar('instituciones')">
                                <i class="fas fa-sync"></i>
                            </button>
                        </div>
                        <div class="card-body">
                            <div id="instituciones-content">Cargando...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- PROGRAMAS -->
        <div class="tab-pane fade" id="programas">
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-plus"></i> Nuevo Programa</h5>
                        </div>
                        <div class="card-body">
                            <form id="form-programa">
                                <div class="mb-3">
                                    <label class="form-label">Instituci√≥n</label>
                                    <select class="form-select" name="institucionId" required>
                                        <option value="">Seleccionar...</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Nombre</label>
                                    <input type="text" class="form-control" name="nombre" required>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Nivel</label>
                                            <input type="number" class="form-control" name="nivel" min="1" max="10" required>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Promedio</label>
                                            <input type="number" class="form-control" name="promedio" step="0.1" min="0" max="5" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Cr√©ditos</label>
                                    <input type="number" class="form-control" name="creditos" min="1" required>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-save"></i> Guardar
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <h5><i class="fas fa-list"></i> Lista de Programas</h5>
                            <div>
                                <select id="filtro-inst-prog" class="form-select form-select-sm d-inline-block w-auto me-2">
                                    <option value="">Todas las instituciones</option>
                                </select>
                                <button class="btn btn-sm btn-outline-primary" onclick="cargar('programas')">
                                    <i class="fas fa-sync"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="programas-content">Cargando...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- ASIGNATURAS -->
        <div class="tab-pane fade" id="asignaturas">
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-plus"></i> Nueva Asignatura</h5>
                        </div>
                        <div class="card-body">
                            <form id="form-asignatura">
                                <div class="mb-3">
                                    <label class="form-label">Instituci√≥n</label>
                                    <select class="form-select" name="institucionId" required>
                                        <option value="">Seleccionar...</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Programa</label>
                                    <select class="form-select" name="programaId" required>
                                        <option value="">Seleccionar...</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Nombre</label>
                                    <input type="text" class="form-control" name="nombre" required>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Cr√©ditos</label>
                                            <input type="number" class="form-control" name="creditos" min="1" max="10" required>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Semestre</label>
                                            <input type="number" class="form-control" name="semestre" min="1" max="12" required>
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-save"></i> Guardar
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <h5><i class="fas fa-list"></i> Lista de Asignaturas</h5>
                            <div>
                                <select id="filtro-prog-asig" class="form-select form-select-sm d-inline-block w-auto me-2">
                                    <option value="">Todos los programas</option>
                                </select>
                                <button class="btn btn-sm btn-outline-primary" onclick="cargar('asignaturas')">
                                    <i class="fas fa-sync"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="asignaturas-content">Cargando...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- PERSONAS -->
        <div class="tab-pane fade" id="personas">
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-plus"></i> Nueva Persona</h5>
                        </div>
                        <div class="card-body">
                            <form id="form-persona">
                                <div class="mb-3">
                                    <label class="form-label">Instituci√≥n</label>
                                    <select class="form-select" name="institucionId" required>
                                        <option value="">Seleccionar...</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Nombre</label>
                                    <input type="text" class="form-control" name="nombre" required>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Rol</label>
                                            <select class="form-select" name="rol" required>
                                                <option value="">Seleccionar...</option>
                                                <option value="Estudiante">Estudiante</option>
                                                <option value="Profesor">Profesor</option>
                                                <option value="Monitor">Monitor</option>
                                                <option value="Coordinador">Coordinador</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Edad</label>
                                            <input type="number" class="form-control" name="edad" min="16" max="80" required>
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-save"></i> Guardar
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <h5><i class="fas fa-list"></i> Lista de Personas</h5>
                            <div>
                                <select id="filtro-rol-pers" class="form-select form-select-sm d-inline-block w-auto me-2">
                                    <option value="">Todos los roles</option>
                                    <option value="Estudiante">Estudiante</option>
                                    <option value="Profesor">Profesor</option>
                                    <option value="Monitor">Monitor</option>
                                    <option value="Coordinador">Coordinador</option>
                                </select>
                                <button class="btn btn-sm btn-outline-primary" onclick="cargar('personas')">
                                    <i class="fas fa-sync"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="personas-content">Cargando...</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Inicializaci√≥n
document.addEventListener('DOMContentLoaded', () => {
    cargar('instituciones');
    configurarFormularios();
    
    // Event listeners para filtros BD
    document.querySelectorAll('.bd-filter').forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            mostrarBD(btn.dataset.bd);
        });
    });
});

// Configurar formularios
function configurarFormularios() {
    document.getElementById('form-institucion').onsubmit = e => guardar(e, 'instituciones');
    document.getElementById('form-programa').onsubmit = e => guardar(e, 'programas');
    document.getElementById('form-asignatura').onsubmit = e => guardar(e, 'asignaturas');
    document.getElementById('form-persona').onsubmit = e => guardar(e, 'personas');
}

// Guardar entidad
async function guardar(e, tipo) {
    e.preventDefault();
    const form = e.target;
    const data = Object.fromEntries(new FormData(form));
    
    // Asignaturas ya tiene institucionId del formulario
    
    try {
        const res = await fetch(`/api/${tipo}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });
        
        if (res.ok) {
            form.reset();
            cargar(tipo);
            mostrarMensaje('‚úÖ Guardado exitosamente', 'success');
            
            // Si es una instituci√≥n, actualizar selectores
            if (tipo === 'instituciones') {
                setTimeout(() => cargar('instituciones'), 100);
            }
        } else {
            mostrarMensaje('‚ùå Error al guardar', 'danger');
        }
    } catch (e) {
        mostrarMensaje(`‚ùå ${e.message}`, 'danger');
    }
}

// Eliminar entidad
async function eliminar(tipo, id) {
    try {
        const res = await fetch(`/api/${tipo}/${id}`, { method: 'DELETE' });
        if (res.ok) {
            cargar(tipo);
            mostrarMensaje('‚úÖ Eliminado exitosamente', 'success');
        } else {
            mostrarMensaje('‚ùå Error al eliminar', 'danger');
        }
    } catch (e) {
        mostrarMensaje(`‚ùå ${e.message}`, 'danger');
    }
}

// Datos de prueba
async function crearDatos() {
    try {
        const res = await fetch('/api/datosPrueba/crear-todo', { method: 'POST' });
        const data = await res.json();
        
        if (res.ok) {
            mostrarMensaje(`‚úÖ ${data.mensaje}`, 'success');
            cargar('instituciones');
        } else {
            mostrarMensaje(`‚ùå ${data.error}`, 'danger');
        }
    } catch (e) {
        mostrarMensaje(`‚ùå ${e.message}`, 'danger');
    }
}

async function limpiarDatos() {
    if (!confirm('¬øEliminar TODOS los datos?')) return;
    
    try {
        const res = await fetch('/api/datosPrueba/limpiar-todo', { method: 'DELETE' });
        const data = await res.json();
        
        if (res.ok) {
            mostrarMensaje(`‚úÖ ${data.mensaje}`, 'success');
            cargar('instituciones');
        } else {
            mostrarMensaje(`‚ùå ${data.error}`, 'danger');
        }
    } catch (e) {
        mostrarMensaje(`‚ùå ${e.message}`, 'danger');
    }
}

// Cargar datos
async function cargar(tipo) {
    const endpoints = {
        instituciones: '/api/instituciones',
        programas: () => {
            const inst = document.getElementById('filtro-inst-prog')?.value;
            return inst ? `/api/programas?institucionId=${inst}` : '/api/programas';
        },
        asignaturas: () => {
            const prog = document.getElementById('filtro-prog-asig')?.value;
            return prog ? `/api/asignaturas?programaId=${prog}` : '/api/asignaturas';
        },
        personas: () => {
            const rol = document.getElementById('filtro-rol-pers')?.value;
            return rol ? `/api/personas?rol=${rol}` : '/api/personas';
        }
    };

    try {
        const url = typeof endpoints[tipo] === 'function' ? endpoints[tipo]() : endpoints[tipo];
        const res = await fetch(url);
        console.log('Response status:', res.status);
        const data = await res.json();
        console.log('Data received:', data);
        
        document.getElementById(`${tipo}-content`).innerHTML = generarTabla(tipo, data);
        
        if (tipo === 'instituciones') {
            actualizarSelectores(data);
        }
        if (tipo === 'programas') {
            actualizarSelectProgramas(data);
        }
        
    } catch (e) {
        console.error('Error cargando datos:', e);
        document.getElementById(`${tipo}-content`).innerHTML = `<div class="alert alert-danger">Error: ${e.message}</div>`;
    }
}

// Generar tablas
function generarTabla(tipo, datos) {
    const configs = {
        instituciones: {
            headers: ['ID', 'Nombre', 'C√≥digo', 'Acciones'],
            rows: d => [
                `<code>${d.institucionId}</code>`,
                d.nombre,
                `<span class="badge bg-info">${d.codigo}</span>`,
                `<button class="btn btn-sm btn-danger" onclick="eliminar('instituciones','${d.institucionId}')">
                    <i class="fas fa-trash"></i>
                </button>`
            ]
        },
        programas: {
            headers: ['ID', 'Nombre', 'Instituci√≥n', 'Nivel', 'Promedio', 'Cr√©ditos', 'Acciones'],
            rows: d => [
                `<code>${d.programaId}</code>`,
                d.nombre,
                `<span class="badge bg-secondary">${d.institucionId}</span>`,
                d.nivel,
                d.promedio,
                d.creditos,
                `<button class="btn btn-sm btn-danger" onclick="eliminar('programas','${d.programaId}')">
                    <i class="fas fa-trash"></i>
                </button>`
            ]
        },
        asignaturas: {
            headers: ['ID', 'Nombre', 'Programa', 'Cr√©ditos', 'Semestre', 'Acciones'],
            rows: d => [
                `<code>${d.asignaturaId}</code>`,
                d.nombre,
                `<span class="badge bg-primary">${d.programaId}</span>`,
                d.creditos,
                d.semestre,
                `<button class="btn btn-sm btn-danger" onclick="eliminar('asignaturas','${d.asignaturaId}')">
                    <i class="fas fa-trash"></i>
                </button>`
            ]
        },
        personas: {
            headers: ['ID', 'Nombre', 'Instituci√≥n', 'Rol', 'Edad', 'Acciones'],
            rows: d => [
                `<code>${d.personaId}</code>`,
                d.nombre,
                `<span class="badge bg-secondary">${d.institucionId}</span>`,
                `<span class="badge bg-success">${d.rol}</span>`,
                d.edad,
                `<button class="btn btn-sm btn-danger" onclick="eliminar('personas','${d.personaId}')">
                    <i class="fas fa-trash"></i>
                </button>`
            ]
        }
    };

    const config = configs[tipo];
    let html = `
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>${config.headers.map(h => `<th>${h}</th>`).join('')}</tr>
                </thead>
                <tbody>
    `;
    
    datos.forEach(d => {
        html += `<tr>${config.rows(d).map(cell => `<td>${cell}</td>`).join('')}</tr>`;
    });
    
    return html + '</tbody></table></div>';
}

// Actualizar selectores
function actualizarSelectores(instituciones) {
    console.log('Actualizando selectores con:', instituciones);
    const selects = [
        'form-programa select[name="institucionId"]',
        'form-asignatura select[name="institucionId"]', 
        'form-persona select[name="institucionId"]',
        '#filtro-inst-prog'
    ];
    
    selects.forEach(selector => {
        const select = document.querySelector(selector);
        console.log('Selector encontrado:', selector, select);
        if (select) {
            const isFilter = selector.includes('filtro');
            select.innerHTML = isFilter ? '<option value="">Todas las instituciones</option>' : '<option value="">Seleccionar...</option>';
            instituciones.forEach(i => {
                select.innerHTML += `<option value="${i.institucionId}">${i.nombre}</option>`;
            });
            console.log('Select actualizado:', select.innerHTML);
        }
    });
}

function actualizarSelectProgramas(programas) {
    const selects = [
        'form-asignatura select[name="programaId"]',
        '#filtro-prog-asig'
    ];
    
    selects.forEach(selector => {
        const select = document.querySelector(selector);
        if (select) {
            const isFilter = selector.includes('filtro');
            select.innerHTML = isFilter ? '<option value="">Todos los programas</option>' : '<option value="">Seleccionar...</option>';
            programas.forEach(p => {
                select.innerHTML += `<option value="${p.programaId}">${p.nombre}</option>`;
            });
        }
    });
}

// Mostrar mensajes
function mostrarMensaje(mensaje, tipo) {
    const alert = document.createElement('div');
    alert.className = `alert alert-${tipo} alert-dismissible fade show position-fixed`;
    alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    alert.innerHTML = `
        ${mensaje}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(alert);
    setTimeout(() => alert.remove(), 3000);
}

// Funci√≥n para actualizar selectores en tab activo
async function actualizarSelectoresEnTab() {
    try {
        const res = await fetch('/api/instituciones');
        const instituciones = await res.json();
        
        // Actualizar solo selectores visibles
        const selectores = document.querySelectorAll('select[name="institucionId"]:not([id])');
        selectores.forEach(select => {
            if (select.offsetParent !== null) { // Solo si es visible
                select.innerHTML = '<option value="">Seleccionar...</option>';
                instituciones.forEach(i => {
                    select.innerHTML += `<option value="${i.institucionId}">${i.nombre}</option>`;
                });
            }
        });
        
        // Actualizar programas para asignaturas
        const resProg = await fetch('/api/programas');
        const programas = await resProg.json();
        const selectProg = document.querySelector('select[name="programaId"]:not([id])');
        if (selectProg && selectProg.offsetParent !== null) {
            selectProg.innerHTML = '<option value="">Seleccionar...</option>';
            programas.forEach(p => {
                selectProg.innerHTML += `<option value="${p.programaId}">${p.nombre}</option>`;
            });
        }
    } catch (e) {
        console.error('Error actualizando selectores:', e);
    }
}

// Event listeners
document.querySelector('[data-bs-target="#programas"]').addEventListener('shown.bs.tab', () => {
    cargar('programas');
    setTimeout(actualizarSelectoresEnTab, 100);
});
document.querySelector('[data-bs-target="#asignaturas"]').addEventListener('shown.bs.tab', () => {
    cargar('asignaturas');
    setTimeout(actualizarSelectoresEnTab, 100);
});
document.querySelector('[data-bs-target="#personas"]').addEventListener('shown.bs.tab', () => {
    cargar('personas');
    setTimeout(actualizarSelectoresEnTab, 100);
});

document.getElementById('filtro-inst-prog').addEventListener('change', () => cargar('programas'));
document.getElementById('filtro-prog-asig').addEventListener('change', () => cargar('asignaturas'));
document.getElementById('filtro-rol-pers').addEventListener('change', () => cargar('personas'));

// Filtro por BD con botones
function mostrarBD(bd) {
    const info = document.getElementById('bd-info');
    const tabItems = document.querySelectorAll('#crudTabs .nav-item');
    const botones = document.querySelectorAll('.bd-filter');
    
    // Actualizar botones activos
    botones.forEach(btn => btn.classList.remove('active'));
    botones.forEach(btn => {
        if (btn.dataset.bd === bd) {
            btn.classList.add('active');
        }
    });
    
    // Actualizar info
    const infos = {
        'todas': 'Mostrando todas las colecciones',
        'General': 'BD General: Solo Instituciones',
        'Academico': 'BD Acad√©mico: Programas y Asignaturas', 
        'Comunidad': 'BD Comunidad: Solo Personas'
    };
    info.textContent = infos[bd];
    
    // Mostrar/ocultar tabs seg√∫n BD
    const tabsToShow = {
        'todas': [0, 1, 2, 3], // Todas
        'General': [0], // Solo Instituciones
        'Academico': [1, 2], // Programas y Asignaturas
        'Comunidad': [3] // Solo Personas
    };
    
    // Mostrar/ocultar tab items
    tabItems.forEach((item, index) => {
        if (tabsToShow[bd].includes(index)) {
            item.style.display = 'block';
        } else {
            item.style.display = 'none';
        }
    });
    
    // Activar primer tab visible
    const firstVisibleIndex = tabsToShow[bd][0];
    const firstVisibleItem = tabItems[firstVisibleIndex];
    if (firstVisibleItem) {
        const firstVisibleTab = firstVisibleItem.querySelector('.nav-link');
        if (firstVisibleTab) {
            // Usar Bootstrap para activar el tab
            const tab = new bootstrap.Tab(firstVisibleTab);
            tab.show();
        }
    }
}

// Event listeners para filtros BD
document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.bd-filter').forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            mostrarBD(btn.dataset.bd);
        });
    });
});
</script>

<style>
.custom-select {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: 2px solid #4f46e5;
    border-radius: 12px;
    font-weight: 600;
    box-shadow: 0 4px 15px rgba(79, 70, 229, 0.2);
    transition: all 0.3s ease;
}

.custom-select:focus {
    border-color: #6366f1;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1), 0 4px 20px rgba(79, 70, 229, 0.3);
    background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
}

.form-select {
    border-radius: 8px;
    border: 1px solid #d1d5db;
    transition: all 0.2s ease;
}

.form-select:focus {
    border-color: #6366f1;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
}

.card {
    border-radius: 12px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.nav-tabs .nav-link {
    border-radius: 8px 8px 0 0;
    transition: all 0.2s ease;
}

.nav-tabs .nav-link:hover {
    background-color: #f8fafc;
    transform: translateY(-1px);
}

.nav-tabs .nav-link.active {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-color: #4f46e5;
}

.btn {
    border-radius: 8px;
    transition: all 0.2s ease;
}

.btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}
</style>